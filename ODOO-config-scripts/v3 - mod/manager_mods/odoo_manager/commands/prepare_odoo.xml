<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="command_gitpull" model="access_server.command">
        <field name="name">Git pull a repository branch</field>
        <field name="bash_code">
pushd %(MAIN_GIT_LOCAL_REPO)s
echo "== Checking out %(BRANCH_NAME)s branch:"
git checkout %(BRANCH_NAME)s
echo "== Pulling from origin:"
git pull
popd
        </field>
    </record>
    <record id="call_gitpull" model="access_server.command.call">
        <field name="base_command" ref="command_gitpull" />
        <field name="arguments_ids" eval="[
                (5, 0, 0),
                (0, 0, { 'key': 'MAIN_GIT_LOCAL_REPO',  'value': '/odoo/odoo-full-git/', }),
                (0, 0, { 'key': 'BRANCH_NAME',          'value': '12.0', }),
                ]" />
    </record>
    
    

    <!-- Create odoo config: -->
    <record id="command_newconfig" model="access_server.command">
        <field name="name">Create new config for Odoo instance</field>
        <field name="bash_code">
#export DB_PASSWORD=`python3 -c 'with open("/odoo/odooconfig.conf") as f: exec(f.read()); print(CONFIG["DB_PASSWORD"])'`

# Install the config file:
cat &lt;&lt; EOF &gt; /odoo/configs/odoo-%(INSTANCENAME)s.conf
[options]
addons_path = %(BRANCHPATH)s/addons
#admin_passwd =
csv_internal_sep = ,
data_dir = /odoo/.local/share/Odoo
#db_host = localhost
#db_port = 5432
#db_password = (not needed)
db_maxconn = 64
db_name = %(INSTANCENAME)s
db_sslmode = prefer
db_template = template1
db_user = %(ODOO_USERNAME)s
demo = {}
email_from = False
;geoip_database = /usr/share/GeoIP/GeoLite2-City.mmdb
http_enable = True
http_interface = 0.0.0.0
http_port = %(HTTPPORT)s
import_partial = 
limit_memory_hard = 2684354560
limit_memory_soft = 2147483648
limit_request = 8192
limit_time_cpu = 60
limit_time_real = 120
limit_time_real_cron = -1
list_db = True
log_db = False
log_db_level = warning
log_handler = :INFO
log_level = info
logrotate = False
longpolling_port = 8072
max_cron_threads = 2
osv_memory_age_limit = 1.0
osv_memory_count_limit = False
pg_path = None
pidfile = False
proxy_mode = True
reportgz = False
server_wide_modules = web
smtp_password = False
smtp_port = 25
smtp_server = localhost
smtp_ssl = False
smtp_user = False
syslog = False
test_commit = False
test_enable = False
test_file = False
test_report_directory = False
translate_modules = ['all']
unaccent = False
without_demo = True
workers = 0
EOF

        </field>
    </record>
    <record id="call_newconfig" model="access_server.command.call">
        <field name="base_command" ref="command_newconfig" />
        <field name="arguments_ids" eval="[
                (5, 0, 0),
                (0, 0, { 'key': 'INSTANCENAME',         'value': 'sidiltestes', }),
                (0, 0, { 'key': 'BRANCHPATH',           'value': '/odoo/releases/13.0/', }),
                (0, 0, { 'key': 'ODOO_USERNAME',        'value': 'odoo', }),
                (0, 0, { 'key': 'HTTPPORT',             'value': '4013', }),
                ]" />
    </record>
    
    

    <!-- Create Systemd file: -->
    <record id="command_systemdconfig" model="access_server.command">
        <field name="name">Create new SystemD startup file for Odoo instance</field>
        <field name="bash_code">
# Install the config file:
sudo /odoo/manager/catinto "%(INSTANCENAME)s" &lt;&lt; EOF

[Unit]
Description=Odoo-instance-%(INSTANCENAME)s
After=network.target

[Service]
Type=simple
User=%(ODOO_USERNAME)s
Group=%(ODOO_USERNAME)s
ExecStart=%(BRANCHPATH)s/odoo-bin --database=%(INSTANCENAME)s --db-filter="%(INSTANCENAME)s.*" --config /odoo/configs/odoo-%(INSTANCENAME)s.conf --logfile /odoo/logs/odoo-%(INSTANCENAME)s.log
KillMode=mixed

[Install]
WantedBy=multi-user.target

EOF
        </field>
    </record>
    <record id="call_systemdconfig" model="access_server.command.call">
        <field name="base_command" ref="command_systemdconfig" />
        <field name="arguments_ids" eval="[
                (5, 0, 0),
                (0, 0, { 'key': 'INSTANCENAME',         'value': 'sidiltestes', }),
                (0, 0, { 'key': 'BRANCHPATH',           'value': '/odoo/releases/13.0/', }),
                (0, 0, { 'key': 'ODOO_USERNAME',        'value': 'odoo', }),
                ]" />
    </record>
    
    

    <!-- Clone or update given branch: -->
    <record id="command_clonebranch" model="access_server.command">
        <field name="name">Clone a branch from general repository</field>
        <field name="bash_code">## Args: MAIN_GIT_LOCAL_REPO BRANCH_NAME BRANCH_PATH
if [ -d "%(BRANCH_PATH)s" ]
	then
    echo "== Branch already cloned. Pulling..."
    pushd %(BRANCH_PATH)s
    git pull
    popd
else
    pushd %(MAIN_GIT_LOCAL_REPO)s
    echo "== Checking out branch %(BRANCH_NAME)s:"
    git checkout %(BRANCH_NAME)s
    popd
    echo "== Cloning branch %(BRANCH_NAME)s:"
    git clone -b %(BRANCH_NAME)s --single-branch %(MAIN_GIT_LOCAL_REPO)s %(BRANCH_PATH)s
fi
        </field>
    </record>
    <record id="call_clonebranch" model="access_server.command.call">
        <field name="base_command" ref="command_clonebranch" />
        <field name="arguments_ids" eval="[
                (5, 0, 0),
                (0, 0, { 'key': 'MAIN_GIT_LOCAL_REPO',  'value': '/odoo/odoo-full-git/', }),
                (0, 0, { 'key': 'BRANCH_NAME',          'value': '13.0', }),
                (0, 0, { 'key': 'BRANCH_PATH',          'value': '/odoo/releases/13.0/', }),
                ]" />
    </record>
    
    

    <!-- Dependency installation - this will be done as the odoo user: -->
    <record id="command_installdeps" model="access_server.command">
        <field name="name">Install needed python dependencies</field>
        <field name="bash_code">## Args: BRANCH_PATH
pushd %(BRANCH_PATH)s
echo "== Upgrading pip..."
pip3 install --upgrade pip
echo "== Instaling packages listed in requirements.txt..."
pip3 install -r requirements.txt
popd
        </field>
    </record>
    <record id="call_installdeps" model="access_server.command.call">
        <field name="base_command" ref="command_installdeps" />
        <field name="arguments_ids" eval="[
                (5, 0, 0),
                (0, 0, { 'key': 'BRANCH_PATH',          'value': '/odoo/releases/12.0/', }),
                ]" />
    </record>

</odoo>
